1. Написать Dockerfile для сборки образа, который будет запускать контейнер с django приложением, доуступным по ссылке: https://github.com/mtuktarov/linux_stuff/tree/master/django-test-app. Для запуска приложения использовать команду python manage.py runserver 0.0.0.0:8000, где manage.py - это файл из репозитория.


	Установил docker, как показывали на вебинаре.
	Создал Dockerfile: 

	FROM django:latest
	COPY ./django-test-app /opt/django-test-app
	WORKDIR /opt/
	COPY ./django-test-app/requirements.txt /tmp/requirements.txt
	RUN pip install -r /tmp/requirements.txt
	RUN chmod +x /opt/django-test-app/script.sh
	RUN chmod +x /opt/django-test-app/manage.py
	RUN rm -rf /tmp/requirements.txt
	CMD ["/opt/django-test-app/script.sh"]

	vlad@ubuntu-linux:~/docker_image$ docker build . -t django:latest
	Sending build context to Docker daemon  41.98kB
	Step 1/9 : FROM django:latest
	 ---> 2b82935a0b47
	Step 2/9 : COPY ./django-test-app /opt/django-test-app
	 ---> 5bcfe190362a
	Step 3/9 : WORKDIR /opt/
	 ---> Running in ff7af96536b0
	Removing intermediate container ff7af96536b0
	 ---> 3d58b6cbb267
	Step 4/9 : COPY ./django-test-app/requirements.txt /tmp/requirements.txt
	 ---> d11da223d61f
	Step 5/9 : RUN pip install -r /tmp/requirements.txt
	 ---> Running in 22780645fc58
	Requirement already satisfied: Django==2.0.8 in /usr/local/lib/python3.4/site-packages (from -r /tmp/requirements.txt (line 1))
	Requirement already satisfied: pytz==2018.5 in /usr/local/lib/python3.4/site-packages (from -r /tmp/requirements.txt (line 2))
	You are using pip version 9.0.1, however version 20.0.2 is available.
	You should consider upgrading via the 'pip install --upgrade pip' command.
	Removing intermediate container 22780645fc58
	 ---> 9a33232a1d69
	Step 6/9 : RUN chmod +x /opt/django-test-app/script.sh
	 ---> Running in fa0a27f28c23
	Removing intermediate container fa0a27f28c23
	 ---> 6f175d80ec04
	Step 7/9 : RUN chmod +x /opt/django-test-app/manage.py
	 ---> Running in fb84303caee6
	Removing intermediate container fb84303caee6
	 ---> 4727fbd6e7e8
	Step 8/9 : RUN rm -rf /tmp/requirements.txt
	 ---> Running in 5e921866673d
	Removing intermediate container 5e921866673d
	 ---> ca1427b20946
	Step 9/9 : CMD ["/opt/django-test-app/script.sh"]
	 ---> Running in 0944da5015b4
	Removing intermediate container 0944da5015b4
	 ---> 477fa4b871c7
	Successfully built 477fa4b871c7
	Successfully tagged django:latest



	vlad@ubuntu-linux:~/docker_image$ docker run -it django:latest
	Performing system checks...

	System check identified no issues (0 silenced).

	You have 15 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth, contenttypes, polls, 	sessions.
	Run 'python manage.py migrate' to apply them.

	April 20, 2020 - 11:03:42
	Django version 2.0.8, using settings 'demo.settings'
	Starting development server at http://0.0.0.0:8000/
	Quit the server with CONTROL-C.


2. Зная, что в этом приложении django хранит базу в файле db.sqlite3, нужно избавиться от ошибки, которая появится при старте:

	You have 15 unapplied migration(s). Your project may not work properly until you apply the migrations for app(s): admin, auth,	 contenttypes, polls, 	sessions.
	Run 'python manage.py migrate' to apply them.



	В скрипте script.sh в строке python /opt/django-test-app/manage.py добавить migrate 

	#! /bin/bash

		python /opt/django-test-app/manage.py migrate
		python /opt/django-test-app/manage.py runserver 0.0.0.0:8000

	

	vlad@ubuntu-linux:~/docker_image$ docker run -it django:latest
	 Operations to perform:
  	 Apply all migrations: admin, auth, contenttypes, polls, sessions
	 Running migrations:
	  Applying contenttypes.0001_initial... OK
	  Applying auth.0001_initial... OK
	  Applying admin.0001_initial... OK
	  Applying admin.0002_logentry_remove_auto_add... OK
	  Applying contenttypes.0002_remove_content_type_name... OK
	  Applying auth.0002_alter_permission_name_max_length... OK
	  Applying auth.0003_alter_user_email_max_length... OK
	  Applying auth.0004_alter_user_username_opts... OK
	  Applying auth.0005_alter_user_last_login_null... OK
	  Applying auth.0006_require_contenttypes_0002... OK
	  Applying auth.0007_alter_validators_add_error_messages... OK
	  Applying auth.0008_alter_user_username_max_length... OK
	  Applying auth.0009_alter_user_last_name_max_length... OK
	  Applying polls.0001_initial... OK
	  Applying sessions.0001_initial... OK
	 Performing system checks...

	 System check identified no issues (0 silenced).
	 April 20, 2020 - 11:08:25
	 Django version 2.0.8, using settings 'demo.settings'
	 Starting development server at http://0.0.0.0:8000/
 	 Quit the server with CONTROL-C. 

3. Запустить контейнер так, чтобы приложение было доступным из браузера Ubuntu, используя Ubuntu hostname.

	vlad@ubuntu-linux:~/docker_image$ docker run -it --publish=8000:8000 django:latest
	Operations to perform:
	  Apply all migrations: admin, auth, contenttypes, polls, sessions
	Running migrations:
	  Applying contenttypes.0001_initial... OK
	  Applying auth.0001_initial... OK
	  Applying admin.0001_initial... OK
	  Applying admin.0002_logentry_remove_auto_add... OK
	  Applying contenttypes.0002_remove_content_type_name... OK
	  Applying auth.0002_alter_permission_name_max_length... OK
	  Applying auth.0003_alter_user_email_max_length... OK
	  Applying auth.0004_alter_user_username_opts... OK
	  Applying auth.0005_alter_user_last_login_null... OK
	  Applying auth.0006_require_contenttypes_0002... OK
	  Applying auth.0007_alter_validators_add_error_messages... OK
	  Applying auth.0008_alter_user_username_max_length... OK
	  Applying auth.0009_alter_user_last_name_max_length... OK
	  Applying polls.0001_initial... OK
	  Applying sessions.0001_initial... OK
	Performing system checks...

	System check identified no issues (0 silenced).
	April 20, 2020 - 11:35:31
	Django version 2.0.8, using settings 'demo.settings'
	Starting development server at http://0.0.0.0:8000/
	Quit the server with CONTROL-C.


4. Создать аккаунт на Dockerhub и залить туда образ. Указать имя образа.

	vlad@ubuntu-linux:~/docker_image$ docker login
	Login with your Docker ID to push and pull images from Docker Hub. If you don't have a Docker ID, head over to https://hub.docker.com to create one.
	Username: vshamaev
	Password: 
	WARNING! Your password will be stored unencrypted in /home/vlad/.docker/config.json.
	Configure a credential helper to remove this warning. See
	https://docs.docker.com/engine/reference/commandline/login/#credentials-store

	Login Succeeded

	vlad@ubuntu-linux:~/docker_image$ docker commit 2f10558f8482 vshamaev/geekhw
	sha256:37992b4504304b2e1db3f02ffeabf72f57308608724ad0ec751fc3d77647f960
	vlad@ubuntu-linux:~/docker_image$ docker push vshamaev/geekhw


